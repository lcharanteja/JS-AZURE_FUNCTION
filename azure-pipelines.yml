trigger:
  - master

variables:
  node_version: 12.14.1
  function_app_name: 'TINodeTest'
  code_coverge_threshold: '20'

pool:
  vmImage: 'ubuntu-latest'

steps:
  - checkout: self
    path: src/$(function_app_name)
  - task: NodeTool@0 
    inputs:
      versionSpec: $(node_version)

  # Install dev dependencies
  - script: npm install
    # workingDirectory: '$(System.DefaultWorkingDirectory)/src/$(function_app_name)'
    displayName: "Install linting, test and coverage dependencies"

  # Perform linting using eslint  
  - script: npm run-script lint
    # workingDirectory: '$(System.DefaultWorkingDirectory)/src/$(function_app_name)'
    displayName: "Run code linting"

  # Execute unit tests
  - script: npm run-script test-ci
    # workingDirectory: '$(System.DefaultWorkingDirectory)/src/$(function_app_name)'
    displayName: "Execute unit tests"
    continueOnError: true


  # Publish unit test results  
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/junit.xml'
      mergeTestResults: true
      testRunTitle: 'Jest Unit Tests'
      failTaskOnFailedTests: true
    displayName: 'Publish unit test report'

  - script: npm run-script coverage-ci
    # workingDirectory: '$(System.DefaultWorkingDirectory)/src/$(function_app_name)'
    displayName: "Calculate Code Coverage"

  # Publish code coverage results
  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: coverage/cobertura-coverage.xml
    displayName: "publish code coverage report"

  # Fail build if coverage below threshold
  - task: BuildQualityChecks@8
    inputs:
      checkCoverage: true
      coverageFailOption: 'fixed'
      coverageType: 'lines'
      coverageThreshold: $(code_coverge_threshold)

  # Prune dev dependencies
  - script: npm prune --production
    # workingDirectory: '$(System.DefaultWorkingDirectory)/src/$(function_app_name)'
    displayName: "Prune dev dependencies"

  - task: ArchiveFiles@2
    displayName: "Archive files"
    inputs:
      rootFolderOrFile: "$(function_app_name)"
      includeRootFolder: false
      archiveFile: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'
      ArtifactName: $(function_app_name)